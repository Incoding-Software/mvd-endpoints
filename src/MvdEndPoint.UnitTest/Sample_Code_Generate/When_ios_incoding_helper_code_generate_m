#import "IncodingHelper.h"
@implementation IncodingHelper
+(id)sharedInstance
{
  static dispatch_once_t pred;
  static IncodingHelper *sharedInstance = nil;
  dispatch_once(&pred, ^{
   sharedInstance = [[IncodingHelper alloc] init];
  });
  return sharedInstance;
}
- (id)init {
    self = [super init];
    return self;
}
-(void)refreshSession
{
    NSURLSessionConfiguration *sessionConfig = [NSURLSessionConfiguration defaultSessionConfiguration];
    sessionConfig.timeoutIntervalForRequest = 30.0;
    sessionConfig.timeoutIntervalForResource = 30.0;
    sessionConfig.HTTPMaximumConnectionsPerHost = 15;
    sessionConfig.HTTPShouldSetCookies = true;
    sessionConfig.HTTPAdditionalHeaders = @{@"X-Requested-With": @"XMLHttpRequest"};
    _session = [NSURLSession sessionWithConfiguration:sessionConfig delegate:self delegateQueue:nil];
}
-(void)execute:(NSString *) requestString type:(NSString *)type done:(ResponseDone)done
{
  NSString *urlString = [NSString stringWithFormat:@"http://localhost:48801/Dispatcher/%@?%@",type,
[requestString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet  URLQueryAllowedCharacterSet]]];
  NSURL *url = [NSURL URLWithString:urlString];

  if(!_session)
 {
   [self refreshSession];
 }
 NSURLSessionDataTask *getTask = [_session dataTaskWithURL:url completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                   NSError *jsonError;
                                   NSDictionary *result = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&jsonError];
                                   done(result);     }];
 [getTask resume];
}
-(void)download:(NSString *) requestString type:(NSString *)type done:(ImageDone)done
{
  NSString *urlString = [NSString stringWithFormat:@"http://localhost:48801/Dispatcher/%@?%@",type,
[requestString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet  URLQueryAllowedCharacterSet]]];
  NSURL *url = [NSURL URLWithString:urlString];

  if(!_session)
 {
   [self refreshSession];
 }
 NSURLSessionDownloadTask *getTask = [self.session downloadTaskWithURL:url completionHandler:^(NSURL *location, NSURLResponse *response,NSError *error) {
 UIImage *downloadedImage = [UIImage imageWithData:[NSData dataWithContentsOfURL:location]];
 done(downloadedImage);
}];

 [getTask resume];
}
@end