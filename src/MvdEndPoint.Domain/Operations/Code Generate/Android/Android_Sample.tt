<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Request" #>
<#@ parameter type="System.String" name="Type" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="Listener" #>
<#@ parameter type="System.String" name="Response" #>
<#@ parameter type="System.Boolean" name="ResponseAsArray" #>
<#@ parameter type="System.Collections.Generic.List<Incoding.Endpoint.GetPropertiesQuery.Response>" name="Properties" #>
import <#=Namespace#>.JsonModelStateData;
import <#=Namespace#>.<#=Listener#>;
import <#=Namespace#>.<#=Response#>;
import <#=Namespace#>.<#=Request#>;

<#=Request#> request = new <#=Request#>(context);
<# foreach(var pair in Properties) { #>
request.<#=pair.Name#> = something;
<# } #>   
request.On(new <#=Listener#>() {
    @Override
    public void Success(<#=Response#><#if(ResponseAsArray){#>[]<#} else {#> <#}#> response) {
        // do something code
    }

    @Override
    public void Error(JsonModelStateData[] modelState) {
        for (JsonModelStateData stateData : modelState) {
            if (!stateData.isValid) {
                //do something for validation
            }
        }
    }
});