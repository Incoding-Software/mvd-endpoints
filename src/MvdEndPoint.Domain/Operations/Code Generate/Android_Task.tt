<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.String" name="Listener" #>
<#@ parameter type="System.String" name="Request" #>
<#@ parameter type="System.String" name="Response" #>
<#@ parameter type="System.String" name="Url" #>
<#@ parameter type="System.Boolean" name="IsGet" #>
<#@ parameter type="System.Boolean" name="HasRequest" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="PropertiesByResponse" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="PropertiesByRequest" #>

import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.preference.PreferenceManager;
import org.apache.http.Header;
import org.apache.http.HttpResponse;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

public class <#= Name #> extends AsyncTask<String, Integer, String> {

    private <#= Listener #> listener;

    private <#= Request #> request <# if(PropertiesByRequest.Count == 0) { #> = new <#= Request #>() <# } #>;

	<# if(PropertiesByRequest.Count > 0) { #>
    public <#= Name #>(<#= Request #> request) {    
	this.request = request;    
    }
	<# } #> 
	
	@Override
    protected void onPostExecute(String s) {
        super.onPostExecute(s);
        try {
            JSONObject jsonObject = new JSONObject(s);
            JSONObject data = new JSONObject(jsonObject.getString("data"));
            listener.Success(<#= Response #>.Create(data));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

	@Override
    protected String doInBackground(String... strings) {
        try {
            HttpResponse response = request.execute();
            Header[] cookieHeader = response.getHeaders("Set-Cookie");
            SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(new MainActivity());
            for (Header header : cookieHeader) {
                preferences.edit().putString(header.getName(), header.getValue());
            }
            String json = EntityUtils.toString(response.getEntity());
            return json;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }

    public void On(<#= Listener #> on)
    {
        listener = on;
        execute();
    }
}