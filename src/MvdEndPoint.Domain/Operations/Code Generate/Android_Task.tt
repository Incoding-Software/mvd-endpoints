<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.String" name="Listener" #>
<#@ parameter type="System.String" name="Request" #>
<#@ parameter type="System.String" name="Response" #>
<#@ parameter type="System.String" name="Url" #>
<#@ parameter type="System.Boolean" name="HasRequest" #>
<#@ parameter type="System.String" name="Namespace" #>
package <#= Namespace #>

import android.content.Context;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.preference.PreferenceManager;
import org.apache.http.Header;
import org.apache.http.HttpResponse;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

public class <#= Name #> extends AsyncTask<String, Integer, String> {

    private Context context;

    private <#= Listener #> listener;

    private <#= Request #> request <# if(!HasRequest) { #> = new <#= Request #>() <# } #>;
	
    public <#= Name #>(Context context<# if(HasRequest) { #>, <#= Request #> request <# } #>) {    
	  this.context= context;
	  <# if(HasRequest) { #>
	  this.request = request;    
	  <# } #>
    }
		
	@Override
    protected void onPostExecute(String s) {
        super.onPostExecute(s);
        try {
            listener.Success( <#=Response#>.Create(new JSONObject(s)) );
        } catch (Exception e) {
            e.printStackTrace();
        } catch (ModelStateException e) {
            listener.Error(e.getState());
        }
    }

	@Override
    protected String doInBackground(String... strings) {
        try {
            HttpResponse response = request.execute(context);            
            return EntityUtils.toString(response.getEntity());            
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }

    public void On(<#= Listener #> on)
    {
        listener = on;
        execute();
    }
}