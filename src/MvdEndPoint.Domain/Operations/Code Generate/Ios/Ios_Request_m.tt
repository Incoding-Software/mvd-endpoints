<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Incoding.Extensions" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.String" name="Type" #>
<#@ parameter type="System.String" name="Method" #>
<#@ parameter type="System.String" name="Response" #>
<#@ parameter type="System.Boolean" name="IsQuery" #>
<#@ parameter type="System.Boolean" name="IsImage" #>
<#@ parameter type="System.Collections.Generic.List<Incoding.Endpoint.GetPropertiesQuery.Response>" name="Properties" #>
#import "IncodingHelper.h"

@implementation <#= Name#>
<# foreach(var prop in Properties) { #>
	@synthesize <#= prop.Name#>;    
<# } #>
<# if(IsQuery){#>
-(void)on:(Success<#=Name#>)success
<#}else{#>
-(void)on:(Success<#=Name#>)success error:(Error<#=Name#>)error
<#    } #>
{    
    NSString *request =  [NSString stringWithFormat:@"incType=%@<# foreach(var prop in Properties) {#>&<#= prop.Name#>=%@<#}#>",
                         @"<#=Type#>" <# foreach(var prop in Properties) {#><#if(prop.Attributes.HasFlag(GetPropertiesQuery.Response.OfAttributes.IsBool)){#>,self.<#= prop.Name#> ? @"true" : @"false"<#}else{#>,self.<#= prop.Name#><#}#><#}#>]; 
     <#if(IsImage){#>   
[[IncodingHelper sharedInstance] download:request type:@"QueryToFile" done:^(UIImage *result){        dispatch_async(dispatch_get_main_queue(), ^{ success(result); });        }}];
     <#}else{#>
[[IncodingHelper sharedInstance] execute:request type:@"<#=Method#>" done:^(NSDictionary *result){
        dispatch_async(dispatch_get_main_queue(), ^{
             NSNumber *isSuccess = result[@"success"];
             if(isSuccess == [NSNumber numberWithBool:YES])
             {
                 success([<#= Response#>  create:result[@"data"]]);
             }
             else
             {
             <#if(IsQuery){#>
                [NSException raise:@"Invalid foo value" format:@"foo of %d is invalid",result[@"data"] ];
             <#}else{ #>
                error([ModelStateException create:result[@"data"]]);
             <#}#>
             }});        
    }];
<#}#>
}
@end

