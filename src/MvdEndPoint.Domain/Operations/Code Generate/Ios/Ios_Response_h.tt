<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Incoding.Extensions" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.Boolean" name="IsQuery" #>
<#@ parameter type="System.Boolean" name="IsArray" #>
<#@ parameter type="System.Collections.Generic.List<Incoding.Endpoint.GetPropertiesQuery.Response>" name="Properties" #>
@interface <#= Name #> : NSObject
<# foreach(var prop in Properties) { #>
 <#if(prop.Attributes.HasFlag(GetPropertiesQuery.Response.OfAttributes.IsCanNull)){ #>
@property (strong, nonatomic) <#= prop.Type#> *<#= prop.Name#>;    	  
<#}else{#>
@property (assign, nonatomic) <#= prop.Type#> <#= prop.Name#>;    	  
<#}#>
<# } #>
<#if(IsArray){#>
  +(NSMutableArray *)create:(NSDictionary *)json;  
<#}else{#>
  +(<#= Name #> *)create:(NSDictionary *)json;
<#}#>
<#if(IsQuery){#>
-(void)encodeWithCoder:(NSCoder *)encoder;
-(id)initWithCoder:(NSCoder *)decoder;
<#}#>
@end
