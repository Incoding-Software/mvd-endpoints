<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.Boolean" name="IsCommand" #>
<#@ parameter type="System.Boolean" name="IsArray" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="Properties" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="MappingJsonMethodByType" #>

import org.json.JSONException;
import org.json.JSONObject;	

public class <#= Name #> {

  <# if(!IsCommand) { #>
    <# foreach(var pair in Properties) { #>
  public <#= pair.Value #> <#= pair.Key #>;
    <# } #>    
  <# } #>
    

  <# if(IsCommand) { #>  
      public static <#= Name #> Create(JSONObject data) throws JSONException { 
       return data;
      }
  <# } else {#> 
      <# if(IsArray) {#>
      public static <#= Name #> Create(JSONObject data) throws JSONException {       	    
		  int length = data.length();
          GetCarsQueryResponse[] result = new GetCarsQueryResponse[length];
          for (int i = 0; i < length; i++) {
              JSONObject item = data.getJSONObject(i);
		  
              GetCarsQueryResponse response = new GetCarsQueryResponse();
              response.Brand = item.getString("Brand");
              response.Model = item.getString("Model");
              response.Seating = item.getInt("Seating");
              response.Id = item.getString("Id");
              result[i] = response;
          }	    
		return result;     
      } 
	  <# } else { #>
	     public static <#= Name #> Create(JSONObject data) throws JSONException {     
	      <#= Name #> result = new <#= Name #>();
          <# foreach(var pair in Properties) { #>
           result.<#= pair.Key #> = data.<#= MappingJsonMethodByType[pair.Value] #>("<#= pair.Key #>");
          <# } #>      
		  }     
	  <# } #>   	     
  <# } #>          
                                                     
}