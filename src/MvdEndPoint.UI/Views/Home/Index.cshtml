@using Incoding.Extensions
@using Incoding.MvcContrib
@using MvdEndPoint.Domain
@using MvdEndPoint.UI.Controllers
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var tmpl = new EndPointItem.Tmpl
                   {
                           DefaultUrl = "http://ivg-benchmarking.knowitconsulting.co.uk",
                           DownloadLinkId = Guid.NewGuid().ToString(),
                           BaseUrlName = Guid.NewGuid().ToString(),
                           CheckedTypeName = Guid.NewGuid().ToString(),
                           AllId = Guid.NewGuid().ToString()
                   };

    string containerId = Guid.NewGuid().ToString();
    string typeId = Guid.NewGuid().ToString();
}
<style>
    body { margin-top: 30px; }
</style>



<div class="container">
    <div class="row">
        <div class="col-md-2">                
            <label>Type:</label>        
            @Html.DropDownList(typeId, typeof(EndPointItem.OfType).ToSelectList(), "All", Html.When(JqueryBind.Change)
                                                                                              .Direct()
                                                                                              .OnSuccess(dsl => dsl.WithId(containerId).Core().Trigger.Incoding())
                                                                                              .AsHtmlAttributes())    
        </div>
        <div class="col-md-5">
            <label>Url:</label>                
            @(Html.When(JqueryBind.Change)
                  .Direct()
                  .OnSuccess(dsl => dsl.With(r => r.Id(tmpl.DownloadLinkId)).Core().Trigger.Invoke(JqueryBind.InitIncoding))
                  .AsHtmlAttributes(new { name = tmpl.BaseUrlName, style = "width:350px" })
                  .ToTextBox(value: tmpl.DefaultUrl))     
                
        </div>
        <div class="col-md-3 col-lg-offset-2"> 
            @(Html.When(JqueryBind.None)
                  .Direct()
                  .OnSuccess(dsl =>
                                 {
                                     var url = Url.Dispatcher().Query<MessagesToPackageQuery>(new
                                                                                                  {
                                                                                                          Names = Selector.Jquery.Name(tmpl.CheckedTypeName),
                                                                                                          BaseUrl = Selector.Jquery.Name(tmpl.BaseUrlName)
                                                                                                  })
                                                  .AsFile(incFileDownloadName: "all.zip")
                                                  .ToBuildUrl();
                                     dsl.Self().Core().JQuery.Attributes.SetAttr(HtmlAttribute.Href, url);
                                 })
                  .AsHtmlAttributes(new { id = tmpl.AllId, @class = "pull-right" })
                  .ToLink("Download All ( checked )"))
        </div>
    </div>

    

    @(Html.When(JqueryBind.InitIncoding)
          .AjaxGet(Url.Action("Endpoint", "Dispatcher", new { type = Selector.Jquery.Name(typeId) }))
          .OnSuccess(dsl =>
                         {
                             string url = Url.Dispatcher()
                                             .Model(tmpl)
                                             .AsView("~/Views/Home/Endpoint_Item_Tmpl.cshtml");
                             dsl.Self().Core().Insert.WithTemplateByUrl(url).Html();
                         })
          .AsHtmlAttributes(new { id = containerId })
          .ToDiv())
</div>