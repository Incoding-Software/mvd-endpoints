@helper RenderProperty(ITemplateSyntax<GetMessagesQuery.Response.Item> property)
{
    <li class="method-list-item">
        <h3 class="method-list-item-label">
            @property.For(s => s.Name)
            @property.IsInline(r => r.IsRequired, @<text><span class="method-list-item-label-badge">required</span></text>)
            @property.NotInline(r => r.IsRequired, @<text><span class="method-list-item-label-details">optional</span></text>)
            <span class="method-list-item-validation">
                @property.For(r => r.Type), value is <span class="method-list-item-label-promote">@property.For(r => r.Default)</span>
            </span>
            @using (property.Is(s => s.Values))
            {
                <span class="method-list-item-validation">
                    <code>
                        @using (var valueEach = property.ForEach(s => s.Values))
                        {
                            @valueEach.For(s => s.Text)@:,
                        }
                    </code>
                    </span>
            }

        </h3>
        @EditTextArea(property.For(s => s.Id), HtmlTag.Div, property.ForRaw(s => s.Description), Url.Dispatcher().Push(new MessageCommand.UpdatePropertyDescriptionCommand()
                                                                                                                       {
                                                                                                                               Id = property.For(s => s.Id),
                                                                                                                               Description = Selector.Jquery.Self()
                                                                                                                       }), true, new { @class = "method-list-item-description ce-element" })
        @using (property.Is(s => s.Childrens))
        {
            <div class="method-list-item-clearfix"></div>
            <div class="method-list method-list-child">
                @(Html.When(JqueryBind.Click)
                      .OnSuccess(dsl =>
                                 {
                                     dsl.Self().JQuery.Attr.ToggleClass("expanded");
                                     dsl.With(r => r.Self().Closest(HtmlTag.Div).Find(s => s.Class("method-list-group"))).JQuery.Attr.ToggleClass(B.Hidden);
                                 })
                      .AsHtmlAttributes(new { @class = "method-list-title" })
                      .ToTag(HtmlTag.H5, " child attributes"))
                <ul class="method-list-group hidden">
                    @using (var child = property.ForEach(s => s.Childrens))
                    {
                        <li class="method-list-item">
                            <h3 class="method-list-item-label">
                                @child.For(s => s.Name)
                                <span class="method-list-item-validation">@child.For(r => r.Type) value is @child.For(r => r.Default)</span>
                            </h3>
                            @EditTextArea(child.For(s => s.Id), HtmlTag.Div, child.ForRaw(s => s.Description), Url.Dispatcher().Push(new MessageCommand.UpdatePropertyDescriptionCommand()
                                                                                                                                     {
                                                                                                                                             Id = child.For(s => s.Id),
                                                                                                                                             Description = Selector.Jquery.Self()
                                                                                                                                     }), true, new { @class = "method-list-item-description ce-element" })
                        </li>
                    }
                </ul>
            </div>
        }
    </li>
}

@helper EditTextArea(string id, HtmlTag tag, MvcHtmlString content, string url, bool isWysiwyg, object attr = null)
{
    var contentId = "content" + tag.ToString() + id;
    var textAreaId = "textArea" + tag.ToString() + id;
    @(Html.When(JqueryBind.DblClick)
          .OnBegin(dsl => dsl.Break.If(() => !Selector.Jquery.Self().HasClass(B.Active)))
          .OnSuccess(dsl =>
                     {
                         dsl.WithId(contentId)
                            .WithId(textAreaId)
                            .JQuery.Attr.ToggleClass(B.Hidden);

                         if (isWysiwyg)
                         {
                             dsl.WithId(textAreaId)
                                .Behaviors(instancesDsl =>
                                           {
                                               instancesDsl.JQuery.PlugIn("trumbowyg", "destroy").If(() => textAreaId.ToId().HasClass(B.Hidden));
                                               instancesDsl.JQuery.PlugIn("trumbowyg").If(() => !textAreaId.ToId().HasClass(B.Hidden));
                                           });
                         }
                     })
          .AsHtmlAttributes(attr)
          .ToTag(tag,
                 @<text>
                     <div id="@contentId">
                         @content
                     </div>
                     @(Html.When(JqueryBind.Blur)
                           .AjaxPost(url)
                           .OnSuccess(dsl =>
                                      {
                                          dsl.WithId(contentId)
                                             .Behaviors(instancesDsl =>
                                                        {
                                                            instancesDsl.JQuery.Dom.Use(Selector.Jquery.Self()).Html();
                                                            instancesDsl.Trigger.Invoke(JqueryBind.DblClick);
                                                        });
                                          dsl.WithId(typeof(GetMessagesQuery.AsNav).Name).Trigger.None();
                                      })
                           .AsHtmlAttributes(new { @class = B.Hidden.ToLocalization(), style = "width:100%", id = textAreaId })
                           .ToTag(HtmlTag.TextArea, content))
                  </text>))
}


@{

    using (var template = Html.Incoding().Template<GetMessagesQuery.Response>())
    {
        using (var each = template.ForEach())
        {
            @each.IsInline(s => s.IsGroup, @<text>
                                               <section class="method first-of-group" id="@each.For(r => r.Id)">
                                                   <div class="method-area">
                                                       <div class="method-copy">
                                                           <div class="method-copy-padding">
                                                               @EditTextArea(each.For(s => s.EntityId), HtmlTag.H1, each.ForRaw(s => s.Group), Url.Dispatcher().Push(new MessageCommand.UpdateGroupNameCommand()
                                                                                                                                                                     {
                                                                                                                                                                             Id = each.For(s => s.EntityId),
                                                                                                                                                                             Name = Selector.Jquery.Self()
                                                                                                                                                                     }), false, new { @class = "ce-element" })
                                                               @EditTextArea(each.For(s => s.EntityId), HtmlTag.Div, each.ForRaw(s => s.Description), Url.Dispatcher().Push(new MessageCommand.UpdateGroupDescriptionCommand()
                                                                                                                                                                            {
                                                                                                                                                                                    Id = each.For(s => s.EntityId),
                                                                                                                                                                                    Description = Selector.Jquery.Self()
                                                                                                                                                                            }), true, new { @class = "ce-element" })

                                                           </div>
                                                       </div>
                                                       <div class="method-example"></div>
                                                   </div>
                                               </section>
                                            </text>)
            using (each.Not(s => s.IsGroup))
            {
                <section class="method" id="@each.For(r => r.Id)">
                    <div class="method-area">
                        <div class="method-copy">
                            <div class="method-copy-padding">
                                @EditTextArea(each.For(s => s.EntityId), HtmlTag.H2, each.ForRaw(s => s.Name), Url.Dispatcher().Push(new MessageCommand.UpdateNameCommand()
                                                                                                                                     {
                                                                                                                                             Id = each.For(s => s.EntityId),
                                                                                                                                             Name = Selector.Jquery.Self()
                                                                                                                                     }), false, new { @class = "ce-element" })

                                @EditTextArea(each.For(s => s.EntityId), HtmlTag.Div, each.ForRaw(s => s.Description), Url.Dispatcher().Push(new MessageCommand.UpdateDescriptionCommand()
                                                                                                                                             {
                                                                                                                                                     Id = each.For(s => s.EntityId),
                                                                                                                                                     Description = Selector.Jquery.Self()
                                                                                                                                             }), true, new { @class = "ce-element" })
                            </div>
                            <div class="method-list">
                                <h5 class="method-list-title">
                                    REQUEST
                                </h5>
                                <ul class="method-list-group">
                                    @each.NotInline(r => r.PropertiesOfRequest, @<text>
                                                                                    <li class="method-list-item">
                                                                                        <h3 class="method-list-item-label">
                                                                                            No arguments…
                                                                                        </h3>
                                                                                    </li>
                                                                                 </text>)
                                    @using (var property = each.ForEach(r => r.PropertiesOfRequest))
                                    {
                                        @RenderProperty(property)
                                    }
                                </ul>
                                <h5 class="method-list-title">
                                    RESPONSE
                                </h5>
                                <ul class="method-list-group">
                                    @each.NotInline(r => r.PropertiesOfResponse, @<text>
                                                                                     <li class="method-list-item">
                                                                                         <h3 class="method-list-item-label">
                                                                                             Dynamic object
                                                                                         </h3>
                                                                                     </li>
                                                                                  </text>)
                                    @using (var property = each.ForEach(r => r.PropertiesOfResponse))
                                    {
                                        @RenderProperty(property)
                                    }
                                </ul>
                            </div>
                            @each.IsInline(r => r.Result, @<text>
                                                              <div class="method-copy-padding">
                                                                  <h2>Returns</h2>
                                                                  @each.For(r => r.Result)
                                                              </div>
                                                           </text>)
                        </div>

                        <div class="method-example http hidden">
                            <div class="method-example-part">
                                <div class="method-example-request include-prompt">
                                    <pre>    
                                        <code class="http hljs">@each.For(s => s.SampleOfHttp)</code>
                                   </pre>
                                </div>
                            </div>
                        </div>
                        <div class="method-example curl hidden">
                            <div class="method-example-part">
                                <div class="method-example-request include-prompt">
                                    <pre>    
                                        <code class="curl hljs">@each.For(s => s.SampleOfCurl)</code>
                                   </pre>
                                </div>
                            </div>
                        </div>
                        <div class="method-example xamarin">
                            <div class="method-example-part">
                                <div class="method-example-declaration">
                                    <pre>    
                                    <code class="hljs java">@each.For(r => r.SampleOfXamarin)</code>
                                   </pre>
                                    <a href="@Url.Dispatcher().Query(new DownloadSourceCodeQuery()
                                                                     {
                                                                             Device = DeviceOfType.WP,
                                                                             Id = each.For(r => r.EntityId)
                                                                     }).AsFile(incFileDownloadName: each.For(s => s.Name) + ".zip")">
                                        download
                                    </a> source code
                                </div>
                            </div>
                        </div>

                        <div class="method-example android">
                            <div class="method-example-part">
                                <div class="method-example-declaration">
                                    <pre>    
                                    <code class="hljs java">@each.For(r => r.SampleOfAndroid)</code>
                                   </pre>
                                    <a href="@Url.Dispatcher().Query(new DownloadSourceCodeQuery()
                                                                     {
                                                                             Device = DeviceOfType.Android,
                                                                             Id = each.For(r => r.EntityId)
                                                                     }).AsFile(incFileDownloadName: each.For(s => s.Name) + ".zip")">
                                        download
                                    </a> source code
                                </div>
                            </div>
                        </div>
                        <div class="method-example sandbox hidden">
                            <div class="method-example-part">
                                <div class="method-example-endpoint">
                                    @{ var resultId = "result-" + each.For(s => s.EntityId); }
                                    @using (Html.When(JqueryBind.IncAjaxError)
                                                .StopPropagation()
                                                .OnComplete(dsl => dsl.Self().Call("DataToString", "#" + resultId, Selector.Event.Data))
                                                .When(JqueryBind.Submit)
                                                .PreventDefault()
                                                .Submit()
                                                .OnBegin(dsl => dsl.Self().Eval("NProgress.start({parent:'#" + resultId + "'})"))
                                                .OnComplete(dsl =>
                                                            {
                                                                dsl.Self().Call("DataToString", "#" + resultId, Selector.Result);
                                                                dsl.Self().Eval("NProgress.done({parent:'#" + resultId + "'})");
                                                            })
                                                .OnError(dsl => dsl.Self().Form.Validation.Refresh())
                                                .When(JqueryBind.InitIncoding)
                                                .Ajax(new GetMessageDetailQuery() { Id = each.For(s => s.EntityId) })
                                                .OnSuccess(dsl =>
                                                           {
                                                               dsl.Self().Form.Validation.Parse();
                                                               dsl.Self().JQuery.Dom.WithTemplateByView("~/Views/Endpoint/Sandbox_Item_Tmpl.cshtml").Prepend();
                                                           })
                                                .AsHtmlAttributes(new { @class = "form-horizontal", method = each.For(s => s.Verb) })
                                                .ToBeginForm(each.For(r => r.Url)))
                                    {
                                        <div class="form-group">
                                            <div class="col-lg-offset-2 col-lg-9">
                                                <button type="submit" class="btn btn-block btn-info">Send</button>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="method-example-response">
                                    <div>
                                        <pre id="@resultId" style="background: white"></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </section>
            }
        }
    }
}